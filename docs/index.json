[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "js/app.js",
    "content": "/*global app, $on */\n\nimport todo from \"./components/todo.js\";\nimport helpers from \"./components/helpers.js\";\n/**\n * Sets up a brand new Todo list.\n *\n * @param {string} name The name of your new to do list.\n */\n(function() {\n\tfunction setView() {\n\t\ttodo.controller.setView(document.location.hash);\n\t}\n\tsetView();\n\n\thelpers.$on(window, \"load\", setView);\n\thelpers.$on(window, \"hashchange\", setView);\n})();\n",
    "static": true,
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/js/app.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "file",
    "name": "js/components/controller.js",
    "content": "/**\n * Takes a model and view and acts as the controller between them.\n *\n * @example\n * let myController = new MyController(model, view);\n */\nexport default class Controller {\n\t/**\n\t *\n\t * @constructor\n\t * @param {object} model The model instance\n\t * @param {object} view The view instance\n\t */\n\tconstructor(model, view) {\n\t\t/**\n\t\t * @type {Object} model\n\t\t */\n\t\tthis.model = model;\n\t\t/**\n\t\t * @type {Object} view\n\t\t */\n\t\tthis.view = view;\n\t\tthis.addItem = this.addItem.bind(this);\n\t\tthis.view.bind(\"newTodo\", title => {\n\t\t\tthis.addItem(title);\n\t\t});\n\t\tthis.view.bind(\"itemEdit\", item => {\n\t\t\tthis.editItem(item.id);\n\t\t});\n\t\tthis.view.bind(\"itemEditDone\", item => {\n\t\t\tthis.editItemSave(item.id, item.title);\n\t\t});\n\t\tthis.view.bind(\"itemEditCancel\", item => {\n\t\t\tthis.editItemCancel(item.id);\n\t\t});\n\t\tthis.view.bind(\"itemRemove\", item => {\n\t\t\tthis.removeItem(item.id);\n\t\t});\n\n\t\tthis.view.bind(\"itemToggle\", item => {\n\t\t\tthis.toggleComplete(item.id, item.completed);\n\t\t});\n\n\t\tthis.view.bind(\"removeCompleted\", () => {\n\t\t\tthis.removeCompletedItems();\n\t\t});\n\n\t\tthis.view.bind(\"toggleAll\", status => {\n\t\t\tthis.toggleAll(status.completed);\n\t\t});\n\t}\n\t/**\n\t * An event to fire whenever you want to add an item. Simply pass in the event\n\t * object and it'll handle the DOM insertion and saving of the new item.\n\t *\n\t * @param {string} title The title of the new todo to add\n\t */\n\taddItem(title) {\n\t\tif (title.trim() === \"\") {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.model.create(title, () => {\n\t\t\tthis.view.render(\"clearNewTodo\");\n\t\t\tthis._filter(true);\n\t\t});\n\t}\n\t/**\n\t * Triggers the item editing mode.\n\t *\n\t * @param {number} id The id of the todo to edite\n\t */\n\teditItem(id) {\n\t\tthis.model.read(id, data => {\n\t\t\tthis.view.render(\"editItem\", { id: id, title: data[0].title });\n\t\t});\n\t}\n\t/**\n\t * Finishes the item editing mode successfully.\n\t *\n\t * @param {number} id The id of the save todo edite\n\t * @param {string} title Todo's title\n\t */\n\teditItemSave(id, title) {\n\t\ttitle = title.trim();\n\n\t\tif (title.length !== 0) {\n\t\t\tthis.model.update(id, { title: title }, () => {\n\t\t\t\tthis.view.render(\"editItemDone\", { id: id, title: title });\n\t\t\t});\n\t\t} else {\n\t\t\tthis.removeItem(id);\n\t\t}\n\t}\n\t/**\n\t * Cancels the item editing mode.\n\t *\n\t * @param {number} id The id of the todo to cancel the editing\n\t */\n\teditItemCancel(id) {\n\t\tthis.model.read(id, data => {\n\t\t\tthis.view.render(\"editItemDone\", { id: id, title: data[0].title });\n\t\t});\n\t}\n\t/**\n\t * By giving it an ID it'll find the DOM element matching that ID,\n\t * remove it from the DOM and also remove it from storage.\n\t *\n\t * @param {number} id The ID of the item to remove from the DOM and storage.\n\t */\n\tremoveItem(id) {\n\t\tthis.model.remove(id, () => {\n\t\t\tthis.view.render(\"removeItem\", id);\n\t\t});\n\n\t\tthis._filter();\n\t}\n\t/**\n\t * Will remove all completed items from the DOM and storage.\n\t */\n\tremoveCompletedItems() {\n\t\tthis.model.read({ completed: true }, data => {\n\t\t\tdata.forEach(item => {\n\t\t\t\tthis.removeItem(item.id);\n\t\t\t});\n\t\t});\n\n\t\tthis._filter();\n\t}\n\t/**\n\t * Give it an ID of a model and it will update the item\n\t * in storage based on the checkbox's state.\n\t *\n\t * @param {number} id The ID of the element to complete or uncomplete\n\t * @param {object} completed To check the state of complete or not\n\t * @param {boolean|undefined} silent Prevent re-filtering the todo items\n\t */\n\ttoggleComplete(id, completed, silent) {\n\t\tthis.model.update(id, { completed: completed }, () => {\n\t\t\tthis.view.render(\"elementComplete\", {\n\t\t\t\tid: id,\n\t\t\t\tcompleted: completed\n\t\t\t});\n\t\t});\n\n\t\tif (!silent) {\n\t\t\tthis._filter();\n\t\t}\n\t}\n\t/**\n\t * Will toggle ALL checkboxes' on/off state and completeness of models\n\t * Just pass in the event object.\n\t *\n\t * @param {boolean|undefined} completed State of the toggleAll checkbox\n\t */\n\ttoggleAll(completed) {\n\t\tthis.model.read({ completed: !completed }, data => {\n\t\t\tdata.forEach(item => {\n\t\t\t\tthis.toggleComplete(item.id, completed, true);\n\t\t\t});\n\t\t});\n\n\t\tthis._filter();\n\t}\n\t/**\n\t * Updates the pieces of the page which change depending on the remaining\n\t * number of todos.\n\t *\n\t * @private\n\t */\n\t_updateCount() {\n\t\tthis.model.getCount(todos => {\n\t\t\tthis.view.render(\"updateElementCount\", todos.active);\n\t\t\tthis.view.render(\"clearCompletedButton\", {\n\t\t\t\tcompleted: todos.completed,\n\t\t\t\tvisible: todos.completed > 0\n\t\t\t});\n\n\t\t\tthis.view.render(\"toggleAll\", {\n\t\t\t\tchecked: todos.completed === todos.total\n\t\t\t});\n\t\t\tthis.view.render(\"contentBlockVisibility\", {\n\t\t\t\tvisible: todos.total > 0\n\t\t\t});\n\t\t});\n\t}\n\t/**\n\t * Re-filters the todo items, based on the active route.\n\t *\n\t * @param {boolean|undefined} force  forces a re-painting of todo items.\n\t * @private\n\t */\n\t_filter(force) {\n\t\tlet activeRoute =\n\t\t\tthis._activeRoute.charAt(0).toUpperCase() + this._activeRoute.substr(1);\n\n\t\t// Update the elements on the page, which change with each completed todo\n\t\tthis._updateCount();\n\n\t\t// If the last active route isn't \"All\", or we're switching routes, we\n\t\t// re-create the todo item elements, calling:\n\t\t//   this.show[All|Active|Completed]();\n\t\tif (\n\t\t\tforce ||\n\t\t\tthis._lastActiveRoute !== \"All\" ||\n\t\t\tthis._lastActiveRoute !== activeRoute\n\t\t) {\n\t\t\tthis[\"show\" + activeRoute]();\n\t\t}\n\t\t/**\n\t\t * Store a reference to the last active route, allowing us to add condition and not show the new active route if it's the same as the last active route.\n\t\t *\n\t\t * @type {string} _lastActiveRoute\n\t\t */\n\t\tthis._lastActiveRoute = activeRoute;\n\t}\n\t/**\n\t * Simply updates the filter nav's selected states.\n\t *\n\t * @param {string} currentPage\n\t * @private\n\t */\n\t_updateFilterState(currentPage) {\n\t\t/**\n\t\t * Store a reference to the active route, allowing us to re-filter todo items as they are marked complete or incomplete.\n\t\t *\n\t\t * @type {string} _activeRoute\n\t\t */\n\t\tthis._activeRoute = currentPage;\n\n\t\tif (currentPage === \"\") {\n\t\t\tthis._activeRoute = \"All\";\n\t\t}\n\n\t\tthis._filter();\n\n\t\tthis.view.render(\"setFilter\", currentPage);\n\t}\n\t/**\n\t * Loads and initialises the view.\n\t *\n\t * @param {string} '' | 'active' | 'completed'\n\t */\n\tsetView(locationHash) {\n\t\tlet route = locationHash.split(\"/\")[1];\n\t\tlet page = route || \"\";\n\t\tthis._updateFilterState(page);\n\t}\n\n\t/**\n\t * An event to fire on load. Will get all items and display them in the\n\t * todo-list\n\t */\n\tshowAll() {\n\t\tthis.model.read(data => {\n\t\t\tthis.view.render(\"showEntries\", data);\n\t\t});\n\t}\n\n\t/**\n\t * Renders all active tasks\n\t */\n\tshowActive() {\n\t\tthis.model.read({ completed: false }, data => {\n\t\t\tthis.view.render(\"showEntries\", data);\n\t\t});\n\t}\n\n\t/**\n\t * Renders all completed tasks\n\t */\n\tshowCompleted() {\n\t\tthis.model.read({ completed: true }, data => {\n\t\t\tthis.view.render(\"showEntries\", data);\n\t\t});\n\t}\n}\n",
    "static": true,
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/js/components/controller.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "Controller",
    "memberof": "js/components/controller.js",
    "static": true,
    "longname": "js/components/controller.js~Controller",
    "access": "public",
    "export": true,
    "importPath": "./js/components/controller.js",
    "importStyle": "Controller",
    "description": "Takes a model and view and acts as the controller between them.",
    "examples": [
      "let myController = new MyController(model, view);"
    ],
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "The model instance"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": "The view instance"
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "model",
    "memberof": "js/components/controller.js~Controller",
    "static": false,
    "longname": "js/components/controller.js~Controller#model",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "view",
    "memberof": "js/components/controller.js~Controller",
    "static": false,
    "longname": "js/components/controller.js~Controller#view",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "addItem",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#addItem",
    "access": "public",
    "description": "An event to fire whenever you want to add an item. Simply pass in the event\nobject and it'll handle the DOM insertion and saving of the new item.",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "The title of the new todo to add"
      }
    ],
    "return": null
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "editItem",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#editItem",
    "access": "public",
    "description": "Triggers the item editing mode.",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the todo to edite"
      }
    ],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "editItemSave",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#editItemSave",
    "access": "public",
    "description": "Finishes the item editing mode successfully.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the save todo edite"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "Todo's title"
      }
    ],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "editItemCancel",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#editItemCancel",
    "access": "public",
    "description": "Cancels the item editing mode.",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the todo to cancel the editing"
      }
    ],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "removeItem",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#removeItem",
    "access": "public",
    "description": "By giving it an ID it'll find the DOM element matching that ID,\nremove it from the DOM and also remove it from storage.",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The ID of the item to remove from the DOM and storage."
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "removeCompletedItems",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#removeCompletedItems",
    "access": "public",
    "description": "Will remove all completed items from the DOM and storage.",
    "lineNumber": 121,
    "params": [],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "toggleComplete",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#toggleComplete",
    "access": "public",
    "description": "Give it an ID of a model and it will update the item\nin storage based on the checkbox's state.",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The ID of the element to complete or uncomplete"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "completed",
        "description": "To check the state of complete or not"
      },
      {
        "nullable": null,
        "types": [
          "boolean",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "silent",
        "description": "Prevent re-filtering the todo items"
      }
    ],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "toggleAll",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#toggleAll",
    "access": "public",
    "description": "Will toggle ALL checkboxes' on/off state and completeness of models\nJust pass in the event object.",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "completed",
        "description": "State of the toggleAll checkbox"
      }
    ],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "_updateCount",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#_updateCount",
    "access": "private",
    "description": "Updates the pieces of the page which change depending on the remaining\nnumber of todos.",
    "lineNumber": 171,
    "params": [],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "_filter",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#_filter",
    "access": "private",
    "description": "Re-filters the todo items, based on the active route.",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "force",
        "description": "forces a re-painting of todo items."
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "_lastActiveRoute",
    "memberof": "js/components/controller.js~Controller",
    "static": false,
    "longname": "js/components/controller.js~Controller#_lastActiveRoute",
    "access": "private",
    "description": "Store a reference to the last active route, allowing us to add condition and not show the new active route if it's the same as the last active route.",
    "lineNumber": 215,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "_updateFilterState",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#_updateFilterState",
    "access": "private",
    "description": "Simply updates the filter nav's selected states.",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "currentPage",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "_activeRoute",
    "memberof": "js/components/controller.js~Controller",
    "static": false,
    "longname": "js/components/controller.js~Controller#_activeRoute",
    "access": "private",
    "description": "Store a reference to the active route, allowing us to re-filter todo items as they are marked complete or incomplete.",
    "lineNumber": 229,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "setView",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#setView",
    "access": "public",
    "description": "Loads and initialises the view.",
    "lineNumber": 244,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "''",
        "description": "| 'active' | 'completed'"
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "showAll",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#showAll",
    "access": "public",
    "description": "An event to fire on load. Will get all items and display them in the\ntodo-list",
    "lineNumber": 254,
    "params": [],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "showActive",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#showActive",
    "access": "public",
    "description": "Renders all active tasks",
    "lineNumber": 263,
    "params": [],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "showCompleted",
    "memberof": "js/components/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/controller.js~Controller#showCompleted",
    "access": "public",
    "description": "Renders all completed tasks",
    "lineNumber": 272,
    "params": [],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "js/components/helpers.js",
    "content": "/*global NodeList */\n\n/**\n * Manage the events with the DOM through the methods defined\n *\n * @example\n * let myHelpers = new MyHelpers();\n */\nclass Helpers {\n\t/**\n\t * Act as a querySelector event\n\t *\n\t * @param {string} selector Represents the class selector to be reach\n\t * @param {undefined|object} scope Represente the scope on which to look for the DOM's class selector\n\t * @returns {object} Return the element from querySelector\n\t */\n\tqs(selector, scope) {\n\t\treturn (scope || document).querySelector(selector);\n\t}\n\n\t/**\n\t * Act as a querySelectorAll event\n\t *\n\t * @param {string} selector Represents the element/class DOM selector to be reach\n\t * @param {undefined|object} scope Represente the scope on which to look for the DOM's class selector\n\t * @returns {object} Return the elements from querySelectorAll\n\t */\n\tqsa(selector, scope) {\n\t\treturn (scope || document).querySelectorAll(selector);\n\t}\n\t/**\n\t * Build an event listener according to the arguments passed in\n\t *\n\t * @param {object} target Represents the targeted HTML tag from the DOM\n\t * @param {string} type Represents the type of event\n\t * @param {function} callback Represent the callback function attach to this event\n\t * @param {boolean} useCapture\n\t */\n\t$on(target, type, callback, useCapture) {\n\t\ttarget.addEventListener(type, callback, !!useCapture);\n\t}\n\n\t/**\n\t * Create an event listener on a target element\n\t *\n\t * @param {object} target Represents the targeted HTML tag from the DOM\n\t * @param {string} selector Represents the element/class DOM selector to be reach\n\t * @param {string} type Represents the type of event\n\t * @param {function} handler Represent the callback function attach to this event\n\t */\n\t$delegate(target, selector, type, handler) {\n\t\tself = this;\n\t\tfunction dispatchEvent(event) {\n\t\t\tlet targetElement = event.target;\n\t\t\tlet potentialElements = self.qsa(selector, target);\n\t\t\tlet hasMatch =\n\t\t\t\tArray.prototype.indexOf.call(potentialElements, targetElement) >= 0;\n\n\t\t\tif (hasMatch) {\n\t\t\t\thandler.call(targetElement, event);\n\t\t\t}\n\t\t}\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/Events/blur\n\t\tlet useCapture = type === \"blur\" || type === \"focus\";\n\n\t\tthis.$on(target, type, dispatchEvent, useCapture);\n\t}\n\t/**\n\t * Reach the parent node of a given element\n\t *\n\t * @param {object} element Represents the element HTML tag that has been clicked from the DOM\n\t * @param {string} tagName The tag name to be reach\n\t * @return {object} Return the parentNode of a specific tag name (if exist).\n\t */\n\t$parent(element, tagName) {\n\t\tif (!element.parentNode) {\n\t\t\treturn;\n\t\t}\n\t\tif (element.parentNode.tagName.toLowerCase() === tagName.toLowerCase()) {\n\t\t\treturn element.parentNode;\n\t\t}\n\t\treturn this.$parent(element.parentNode, tagName);\n\t}\n}\n\nNodeList.prototype.forEach = Array.prototype.forEach;\n\nlet helpers = new Helpers();\n\nexport default helpers;\n",
    "static": true,
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/js/components/helpers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "Helpers",
    "memberof": "js/components/helpers.js",
    "static": true,
    "longname": "js/components/helpers.js~Helpers",
    "access": "public",
    "export": true,
    "importPath": "./js/components/helpers.js",
    "importStyle": null,
    "description": "Manage the events with the DOM through the methods defined",
    "examples": [
      "let myHelpers = new MyHelpers();"
    ],
    "lineNumber": 9,
    "pseudoExport": true,
    "interface": false
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "qs",
    "memberof": "js/components/helpers.js~Helpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/helpers.js~Helpers#qs",
    "access": "public",
    "description": "Act as a querySelector event",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} Return the element from querySelector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "Represents the class selector to be reach"
      },
      {
        "nullable": null,
        "types": [
          "undefined",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": "Represente the scope on which to look for the DOM's class selector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Return the element from querySelector"
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "qsa",
    "memberof": "js/components/helpers.js~Helpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/helpers.js~Helpers#qsa",
    "access": "public",
    "description": "Act as a querySelectorAll event",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} Return the elements from querySelectorAll"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "Represents the element/class DOM selector to be reach"
      },
      {
        "nullable": null,
        "types": [
          "undefined",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": "Represente the scope on which to look for the DOM's class selector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Return the elements from querySelectorAll"
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "$on",
    "memberof": "js/components/helpers.js~Helpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/helpers.js~Helpers#$on",
    "access": "public",
    "description": "Build an event listener according to the arguments passed in",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Represents the targeted HTML tag from the DOM"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Represents the type of event"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Represent the callback function attach to this event"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "useCapture",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "$delegate",
    "memberof": "js/components/helpers.js~Helpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/helpers.js~Helpers#$delegate",
    "access": "public",
    "description": "Create an event listener on a target element",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Represents the targeted HTML tag from the DOM"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "Represents the element/class DOM selector to be reach"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Represents the type of event"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Represent the callback function attach to this event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "$parent",
    "memberof": "js/components/helpers.js~Helpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/helpers.js~Helpers#$parent",
    "access": "public",
    "description": "Reach the parent node of a given element",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "Represents the element HTML tag that has been clicked from the DOM"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tagName",
        "description": "The tag name to be reach"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Return the parentNode of a specific tag name (if exist)."
    }
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "helpers",
    "memberof": "js/components/helpers.js",
    "static": true,
    "longname": "js/components/helpers.js~helpers",
    "access": "public",
    "export": true,
    "importPath": "./js/components/helpers.js",
    "importStyle": "helpers",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "js/components/helpers.js~Helpers"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "js/components/model.js",
    "content": "/**\n * Creates a new Model instance and hooks up the storage.\n *\n * @example\n * let myModel = new MyModel(storage);\n */\nexport default class Model {\n\t/**\n\t *\n\t * @constructor\n\t * @param {object} storage A reference to the client side storage class\n\t */\n\tconstructor(storage) {\n\t\t/**\n\t\t * @type {Object} Represente the locaStorage which store all the todos\n\t\t */\n\t\tthis.storage = storage;\n\t}\n\t/**\n\t * Creates a new todo model.\n\t *\n\t * @param {string} [title] The title of the task\n\t * @param {function} [callback] The callback to fire after the model is created\n\t */\n\tcreate(title, callback) {\n\t\ttitle = title || \"\";\n\t\tcallback = callback || function() {};\n\n\t\tlet newItem = {\n\t\t\ttitle: title.trim(),\n\t\t\tcompleted: false\n\t\t};\n\n\t\tthis.storage.save(newItem, callback);\n\t}\n\n\t/**\n\t * Finds and returns a model in storage. If no query is given it'll simply\n\t * return everything. If you pass in a string or number it'll look that up as\n\t * the ID of the model to find. Lastly, you can pass it an object to match\n\t * against.\n\t *\n\t * @param {string|number|object} [query] A query to match models against\n\t * @param {function} [callback] The callback to fire after the model is found\n\t * @return {Array} Return an array of parsed todos.\n\t *\n\t * @example\n\t * model.read(1, func); // Will find the model with an ID of 1\n\t * model.read('1'); // Same as above\n\t * //Below will find a model with foo equalling bar and hello equalling world.\n\t * model.read({ foo: 'bar', hello: 'world' });\n\t */\n\tread(query, callback) {\n\t\tlet queryType = typeof query;\n\t\tcallback = callback || function() {};\n\n\t\tif (queryType === \"function\") {\n\t\t\tcallback = query;\n\t\t\treturn this.storage.findAll(callback);\n\t\t} else if (queryType === \"string\" || queryType === \"number\") {\n\t\t\tquery = parseInt(query, 10);\n\t\t\tthis.storage.find({ id: query }, callback);\n\t\t} else {\n\t\t\tthis.storage.find(query, callback);\n\t\t}\n\t}\n\t/**\n\t * Updates a model by giving it an ID, data to update, and a callback to fire when\n\t * the update is complete.\n\t *\n\t * @param {number} id The id of the model to update\n\t * @param {object} data The properties to update and their new value\n\t * @param {function} callback The callback to fire when the update is complete\n\t */\n\tupdate(id, data, callback) {\n\t\tthis.storage.save(data, callback, id);\n\t}\n\n\t/**\n\t * Removes a model from storage.\n\t *\n\t * @param {number} id The ID of the model to remove\n\t * @param {function} callback The callback to fire when the removal is complete\n\t */\n\tremove(id, callback) {\n\t\tthis.storage.remove(id, callback);\n\t}\n\n\t/**\n\t * WARNING: Will remove ALL data from storage.\n\t * @ignore\n\t * @param {function} callback The callback to fire when the storage is wiped.\n\t */\n\tremoveAll(callback) {\n\t\tthis.storage.drop(callback); // TODO indicate that it's not use\n\t}\n\n\t/**\n\t * Returns a count of all todos.\n\t * @param {function} callback The callback to fire with todos Object when the getCount function is finished\n\t */\n\tgetCount(callback) {\n\t\tlet todos = {\n\t\t\tactive: 0,\n\t\t\tcompleted: 0,\n\t\t\ttotal: 0\n\t\t};\n\n\t\tthis.storage.findAll(data => {\n\t\t\tdata.forEach(function(todo) {\n\t\t\t\tif (todo.completed) {\n\t\t\t\t\ttodos.completed++;\n\t\t\t\t} else {\n\t\t\t\t\ttodos.active++;\n\t\t\t\t}\n\n\t\t\t\ttodos.total++;\n\t\t\t});\n\t\t\tcallback(todos);\n\t\t});\n\t}\n}\n",
    "static": true,
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/js/components/model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "Model",
    "memberof": "js/components/model.js",
    "static": true,
    "longname": "js/components/model.js~Model",
    "access": "public",
    "export": true,
    "importPath": "./js/components/model.js",
    "importStyle": "Model",
    "description": "Creates a new Model instance and hooks up the storage.",
    "examples": [
      "let myModel = new MyModel(storage);"
    ],
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 83,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/model.js~Model#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "storage",
        "description": "A reference to the client side storage class"
      }
    ]
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "storage",
    "memberof": "js/components/model.js~Model",
    "static": false,
    "longname": "js/components/model.js~Model#storage",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "create",
    "memberof": "js/components/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/model.js~Model#create",
    "access": "public",
    "description": "Creates a new todo model.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "title",
        "description": "The title of the task"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "The callback to fire after the model is created"
      }
    ],
    "return": null
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "read",
    "memberof": "js/components/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/model.js~Model#read",
    "access": "public",
    "description": "Finds and returns a model in storage. If no query is given it'll simply\nreturn everything. If you pass in a string or number it'll look that up as\nthe ID of the model to find. Lastly, you can pass it an object to match\nagainst.",
    "examples": [
      "model.read(1, func); // Will find the model with an ID of 1\nmodel.read('1'); // Same as above\n//Below will find a model with foo equalling bar and hello equalling world.\nmodel.read({ foo: 'bar', hello: 'world' });"
    ],
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number",
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "query",
        "description": "A query to match models against"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "The callback to fire after the model is found"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Return an array of parsed todos."
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "update",
    "memberof": "js/components/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/model.js~Model#update",
    "access": "public",
    "description": "Updates a model by giving it an ID, data to update, and a callback to fire when\nthe update is complete.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the model to update"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The properties to update and their new value"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to fire when the update is complete"
      }
    ],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "remove",
    "memberof": "js/components/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/model.js~Model#remove",
    "access": "public",
    "description": "Removes a model from storage.",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The ID of the model to remove"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to fire when the removal is complete"
      }
    ],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "removeAll",
    "memberof": "js/components/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/model.js~Model#removeAll",
    "access": "public",
    "description": "WARNING: Will remove ALL data from storage.",
    "lineNumber": 94,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to fire when the storage is wiped."
      }
    ],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "getCount",
    "memberof": "js/components/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/model.js~Model#getCount",
    "access": "public",
    "description": "Returns a count of all todos.",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to fire with todos Object when the getCount function is finished"
      }
    ],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "js/components/store.js",
    "content": "/*jshint eqeqeq:false */\n/**\n * Creates a new client side storage object and will create an empty\n * collection if no collection already exists.\n *\n * @example\n * let myStorage = new MyStore(name, callback);\n */\nexport default class Store {\n\t/**\n\t *\n\t * @constructor\n\t * @param {string} name The name of our DB we want to use\n\t * @param {function} callback Our fake DB uses callbacks because in\n\t * real life you probably would be making AJAX calls\n\t */\n\tconstructor(name, callback) {\n\t\tcallback = callback || function() {};\n\t\t/**\n\t\t * @type {string} name of the database\n\t\t */\n\t\tthis._dbName = name;\n\n\t\tif (!localStorage[name]) {\n\t\t\tlet data = {\n\t\t\t\ttodos: []\n\t\t\t};\n\t\t\tlocalStorage[name] = JSON.stringify(data);\n\t\t}\n\n\t\tcallback.call(this, JSON.stringify(localStorage[name]));\n\t}\n\n\t/**\n\t * Finds items based on a query given as a JS object\n\t *\n\t * @param {object} query The query to match against (i.e. {foo: 'bar'})\n\t * @param {function} callback\t The callback to fire when the query has\n\t * completed running\n\t *\n\t * @example\n\t * db.find({foo: 'bar', hello: 'world'}, function (data) {\n\t *\t // data will return any items that have foo: bar and\n\t *\t // hello: world in their properties\n\t * });\n\t */\n\tfind(query, callback) {\n\t\tif (!callback) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet todos = JSON.parse(localStorage[this._dbName]).todos;\n\n\t\tcallback.call(\n\t\t\tthis,\n\t\t\ttodos.filter(todo => {\n\t\t\t\tfor (let q in query) {\n\t\t\t\t\tif (query[q] !== todo[q]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Will retrieve all data from the collection\n\t *\n\t * @param {function} callback The callback to fire upon retrieving data\n\t */\n\tfindAll(callback) {\n\t\tcallback = callback || function() {};\n\t\tcallback.call(this, JSON.parse(localStorage[this._dbName]).todos); // * \"this\" indicates where the function attached to \"call\" should refere to\n\t}\n\n\t/**\n\t * Will save the given data to the DB. If no item exists it will create a new\n\t * item, otherwise it'll simply update an existing item's properties\n\t *\n\t * @param {object} updateData The data to save back into the DB\n\t * @param {function} callback The callback to fire after saving\n\t * @param {number} id An optional param to enter an ID of an item to update\n\t */\n\tsave(updateData, callback, id) {\n\t\tlet data = JSON.parse(localStorage[this._dbName]);\n\t\tlet todos = data.todos;\n\n\t\tcallback = callback || function() {};\n\t\t// If an ID was actually given, find the item and update each property\n\t\tif (id) {\n\t\t\tfor (let todo of todos) {\n\t\t\t\tif (todo.id === id) {\n\t\t\t\t\tfor (let key in updateData) {\n\t\t\t\t\t\ttodo[key] = updateData[key];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocalStorage[this._dbName] = JSON.stringify(data);\n\t\t\tcallback.call(this, todos);\n\t\t} else {\n\t\t\t// Assign an ID\n\t\t\tlet newId = this.createId(todos);\n\t\t\tupdateData.id = newId;\n\t\t\tupdateData.id = parseInt(newId);\n\t\t\ttodos.push(updateData);\n\t\t\tlocalStorage[this._dbName] = JSON.stringify(data);\n\t\t\tcallback.call(this, [updateData]);\n\t\t}\n\t}\n\n\t/**\n\t * Will create a unique id for the new created todo\n\t *\n\t * @param {array} todos The todos array to iterate trough it and get a new unique id\n\t * @return {number} Return an brand new and unique id\n\t */\n\n\tcreateId(todos) {\n\t\tlet newId;\n\t\tlet max = 0;\n\t\tif (todos.length === 0) {\n\t\t\tnewId = 1;\n\t\t}\n\t\tfor (let todo of todos) {\n\t\t\tif (todo.id > max) {\n\t\t\t\tmax = todo.id;\n\t\t\t}\n\t\t\tnewId = max + 1;\n\t\t}\n\t\treturn newId;\n\t}\n\n\t/**\n\t * Will remove an item from the Store based on its ID\n\t *\n\t * @param {number} id The ID of the item you want to remove\n\t * @param {function} callback The callback to fire after saving\n\t */\n\tremove(id, callback) {\n\t\tlet data = JSON.parse(localStorage[this._dbName]);\n\t\tlet todos = data.todos;\n\n\t\tfor (let i = 0; i < todos.length; i++) {\n\t\t\tif (todos[i].id == id) {\n\t\t\t\ttodos.splice(i, 1);\n\t\t\t}\n\t\t}\n\n\t\tlocalStorage[this._dbName] = JSON.stringify(data);\n\t\tcallback.call(this, todos);\n\t}\n\n\t/**\n\t * Will drop all storage and start fresh\n\t *\n\t * @param {function} callback The callback to fire after dropping the data\n\t */\n\tdrop(callback) {\n\t\tlet data = { todos: [] };\n\t\tlocalStorage[this._dbName] = JSON.stringify(data);\n\t\tcallback.call(this, data.todos);\n\t}\n}\n",
    "static": true,
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/js/components/store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "class",
    "name": "Store",
    "memberof": "js/components/store.js",
    "static": true,
    "longname": "js/components/store.js~Store",
    "access": "public",
    "export": true,
    "importPath": "./js/components/store.js",
    "importStyle": "Store",
    "description": "Creates a new client side storage object and will create an empty\ncollection if no collection already exists.",
    "examples": [
      "let myStorage = new MyStore(name, callback);"
    ],
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/store.js~Store#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of our DB we want to use"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Our fake DB uses callbacks because in\nreal life you probably would be making AJAX calls"
      }
    ]
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "_dbName",
    "memberof": "js/components/store.js~Store",
    "static": false,
    "longname": "js/components/store.js~Store#_dbName",
    "access": "private",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "find",
    "memberof": "js/components/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/store.js~Store#find",
    "access": "public",
    "description": "Finds items based on a query given as a JS object",
    "examples": [
      "db.find({foo: 'bar', hello: 'world'}, function (data) {\n // data will return any items that have foo: bar and\n // hello: world in their properties\n});"
    ],
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "The query to match against (i.e. {foo: 'bar'})"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to fire when the query has\ncompleted running"
      }
    ],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "findAll",
    "memberof": "js/components/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/store.js~Store#findAll",
    "access": "public",
    "description": "Will retrieve all data from the collection",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to fire upon retrieving data"
      }
    ],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "save",
    "memberof": "js/components/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/store.js~Store#save",
    "access": "public",
    "description": "Will save the given data to the DB. If no item exists it will create a new\nitem, otherwise it'll simply update an existing item's properties",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "updateData",
        "description": "The data to save back into the DB"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to fire after saving"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "An optional param to enter an ID of an item to update"
      }
    ],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "createId",
    "memberof": "js/components/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/store.js~Store#createId",
    "access": "public",
    "description": "Will create a unique id for the new created todo",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "todos",
        "description": "The todos array to iterate trough it and get a new unique id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Return an brand new and unique id"
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "remove",
    "memberof": "js/components/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/store.js~Store#remove",
    "access": "public",
    "description": "Will remove an item from the Store based on its ID",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The ID of the item you want to remove"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to fire after saving"
      }
    ],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "drop",
    "memberof": "js/components/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/store.js~Store#drop",
    "access": "public",
    "description": "Will drop all storage and start fresh",
    "lineNumber": 161,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to fire after dropping the data"
      }
    ],
    "return": null
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "js/components/template.js",
    "content": "/**\n * @type {object} Stores all signs that could result of conflict\n */\nlet htmlEscapes = {\n\t\"&\": \"&amp;\",\n\t\"<\": \"&lt;\",\n\t\">\": \"&gt;\",\n\t'\"': \"&quot;\",\n\t\"'\": \"&#x27;\",\n\t\"`\": \"&#x60;\"\n};\n\n/**\n *\n * @param {string} chr Represent the incompatible HTML sign define by the new RegExp\n * @return {string} Return a string with the HTML equivalent writing of the incompatible sign\n */\nlet escapeHtmlChar = function(chr) {\n\treturn htmlEscapes[chr];\n};\n\n/**\n * @type {object} Represent the charachter to exclude from the user input\n */\nlet reUnescapedHtml = /[&<>\"'`]/g;\n/**\n * @type {object} Represent the charachter to exclude from the user input\n */\nlet reHasUnescapedHtml = new RegExp(reUnescapedHtml.source);\n\n/**\n *\n * @param {string} string The string to check with RegExp\n */\nlet escape = function(string) {\n\treturn string && reHasUnescapedHtml.test(string)\n\t\t? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t\t: string;\n};\n\n/**\n * Sets up defaults for all the Template methods such as a default template\n * @example\n * let myTemplate = new MyTemplate();\n */\nexport default class Template {\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * @type {string} Default template which create an html implementation for each todo\n\t\t */\n\t\tthis.defaultTemplate =\n\t\t\t'<li data-id=\"{{id}}\" class=\"{{completed}}\">' +\n\t\t\t'<div class=\"view\">' +\n\t\t\t'<input class=\"toggle\" type=\"checkbox\" {{checked}}>' +\n\t\t\t\"<label>{{title}}</label>\" +\n\t\t\t'<button class=\"destroy\"></button>' +\n\t\t\t\"</div>\" +\n\t\t\t\"</li>\";\n\t}\n\t/**\n\t * Creates an <li> HTML string and returns it for placement in your app.\n\t *\n\t * NOTE: In real life you should be using a templating engine such as Mustache or Handlebars, however, this is a vanilla JS example.\n\t *\n\t * @param {object} data The object containing keys you want to find in the template to replace.\n\t * @returns {string} HTML String of an <li> element\n\t *\n\t * @example\n\t * view.show({\n\t *\tid: 1,\n\t *\ttitle: \"Hello World\",\n\t *\tcompleted: 0,\n\t * });\n\t */\n\tshow(data) {\n\t\tlet i, l;\n\t\tlet view = \"\";\n\n\t\tfor (i = 0, l = data.length; i < l; i++) {\n\t\t\tlet template = this.defaultTemplate;\n\t\t\tlet completed = \"\";\n\t\t\tlet checked = \"\";\n\n\t\t\tif (data[i].completed) {\n\t\t\t\tcompleted = \"completed\";\n\t\t\t\tchecked = \"checked\";\n\t\t\t}\n\n\t\t\ttemplate = template.replace(\"{{id}}\", data[i].id);\n\t\t\ttemplate = template.replace(\"{{title}}\", escape(data[i].title));\n\t\t\ttemplate = template.replace(\"{{completed}}\", completed);\n\t\t\ttemplate = template.replace(\"{{checked}}\", checked);\n\n\t\t\tview = view + template;\n\t\t}\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * Displays a counter of how many to dos are left to complete\n\t *\n\t * @param {number} activeTodos The number of active todos.\n\t * @returns {string} String containing the count\n\t */\n\titemCounter(activeTodos) {\n\t\tlet plural = activeTodos === 1 ? \"\" : \"s\";\n\n\t\treturn \"<strong>\" + activeTodos + \"</strong> item\" + plural + \" left\";\n\t}\n\n\t/**\n\t * Updates the text within the \"Clear completed\" button\n\t *\n\t * @param  {[type]} completedTodos The number of completed todos.\n\t * @returns {string} String containing the count\n\t */\n\tclearCompletedButton(completedTodos) {\n\t\tif (completedTodos > 0) {\n\t\t\treturn \"Clear completed\";\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/js/components/template.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "htmlEscapes",
    "memberof": "js/components/template.js",
    "static": true,
    "longname": "js/components/template.js~htmlEscapes",
    "access": "public",
    "export": false,
    "importPath": "./js/components/template.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 4,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "escapeHtmlChar",
    "memberof": "js/components/template.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/components/template.js~escapeHtmlChar",
    "access": "public",
    "export": false,
    "importPath": "./js/components/template.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "chr",
        "description": "Represent the incompatible HTML sign define by the new RegExp"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Return a string with the HTML equivalent writing of the incompatible sign"
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "reUnescapedHtml",
    "memberof": "js/components/template.js",
    "static": true,
    "longname": "js/components/template.js~reUnescapedHtml",
    "access": "public",
    "export": false,
    "importPath": "./js/components/template.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "reHasUnescapedHtml",
    "memberof": "js/components/template.js",
    "static": true,
    "longname": "js/components/template.js~reHasUnescapedHtml",
    "access": "public",
    "export": false,
    "importPath": "./js/components/template.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "escape",
    "memberof": "js/components/template.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/components/template.js~escape",
    "access": "public",
    "export": false,
    "importPath": "./js/components/template.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "The string to check with RegExp"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "Template",
    "memberof": "js/components/template.js",
    "static": true,
    "longname": "js/components/template.js~Template",
    "access": "public",
    "export": true,
    "importPath": "./js/components/template.js",
    "importStyle": "Template",
    "description": "Sets up defaults for all the Template methods such as a default template",
    "examples": [
      "let myTemplate = new MyTemplate();"
    ],
    "lineNumber": 46,
    "interface": false
  },
  {
    "__docId__": 108,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/template.js~Template#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "defaultTemplate",
    "memberof": "js/components/template.js~Template",
    "static": false,
    "longname": "js/components/template.js~Template#defaultTemplate",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "show",
    "memberof": "js/components/template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/template.js~Template#show",
    "access": "public",
    "description": "Creates an <li> HTML string and returns it for placement in your app.\n\nNOTE: In real life you should be using a templating engine such as Mustache or Handlebars, however, this is a vanilla JS example.",
    "examples": [
      "view.show({\nid: 1,\ntitle: \"Hello World\",\ncompleted: 0,\n});"
    ],
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} HTML String of an <li> element"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The object containing keys you want to find in the template to replace."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "HTML String of an <li> element"
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "itemCounter",
    "memberof": "js/components/template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/template.js~Template#itemCounter",
    "access": "public",
    "description": "Displays a counter of how many to dos are left to complete",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} String containing the count"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "activeTodos",
        "description": "The number of active todos."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "String containing the count"
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "clearCompletedButton",
    "memberof": "js/components/template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/template.js~Template#clearCompletedButton",
    "access": "public",
    "description": "Updates the text within the \"Clear completed\" button",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} String containing the count"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "completedTodos",
        "description": "The number of completed todos."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "String containing the count"
    }
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "js/components/todo.js",
    "content": "import Controller from \"./controller.js\";\nimport Model from \"./model.js\";\nimport Store from \"./store.js\";\nimport Template from \"./template.js\";\nimport View from \"./view.js\";\n\n/**\n * Create a Todo app object\n *\n * @example\n * let myTodo = new MyTodo(todoAppName);\n */\nclass Todo {\n\t/**\n\t *\n\t * @constructor\n\t * @param {string} name The name of the todo app, which will be use as localStorage name to store datas\n\t */\n\tconstructor(name) {\n\t\t/**\n\t\t * @type {object} Creates a new client side storage object and will create an empty collection if no collection already exists.\n\t\t */\n\t\tthis.storage = new Store(name);\n\t\t/**\n\t\t * @type {object} Creates a new Model instance and hooks up the storage.\n\t\t */\n\t\tthis.model = new Model(this.storage);\n\t\t/**\n\t\t * @type {object} Sets up defaults for all the Template methods such as a default template\n\t\t */\n\t\tthis.template = new Template();\n\t\t/**\n\t\t * @type {object} View that abstracts away the browser's DOM completely.\n\t\t */\n\t\tthis.view = new View(this.template);\n\t\t/**\n\t\t * @type {object} Takes a model and view and acts as the controller between them.\n\t\t */\n\t\tthis.controller = new Controller(this.model, this.view);\n\t}\n}\n\nlet todo = new Todo(\"todos-vanillajs\");\n\nexport default todo;\n",
    "static": true,
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/js/components/todo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "Todo",
    "memberof": "js/components/todo.js",
    "static": true,
    "longname": "js/components/todo.js~Todo",
    "access": "public",
    "export": true,
    "importPath": "./js/components/todo.js",
    "importStyle": null,
    "description": "Create a Todo app object",
    "examples": [
      "let myTodo = new MyTodo(todoAppName);"
    ],
    "lineNumber": 13,
    "pseudoExport": true,
    "interface": false
  },
  {
    "__docId__": 115,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/todo.js~Todo",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/todo.js~Todo#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the todo app, which will be use as localStorage name to store datas"
      }
    ]
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "storage",
    "memberof": "js/components/todo.js~Todo",
    "static": false,
    "longname": "js/components/todo.js~Todo#storage",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "model",
    "memberof": "js/components/todo.js~Todo",
    "static": false,
    "longname": "js/components/todo.js~Todo#model",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "template",
    "memberof": "js/components/todo.js~Todo",
    "static": false,
    "longname": "js/components/todo.js~Todo#template",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "view",
    "memberof": "js/components/todo.js~Todo",
    "static": false,
    "longname": "js/components/todo.js~Todo#view",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "controller",
    "memberof": "js/components/todo.js~Todo",
    "static": false,
    "longname": "js/components/todo.js~Todo#controller",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "todo",
    "memberof": "js/components/todo.js",
    "static": true,
    "longname": "js/components/todo.js~todo",
    "access": "public",
    "export": true,
    "importPath": "./js/components/todo.js",
    "importStyle": "todo",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "js/components/todo.js~Todo"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "js/components/view.js",
    "content": "/*global qs, qsa, $on, $parent, $delegate */\nimport helpers from \"./helpers.js\";\n\n/**\n * View that abstracts away the browser's DOM completely.\n * It has two simple entry points:\n *\n *   - bind(eventName, handler)\n *     Takes a todo application event and registers the handler\n *   - render(command, parameterObject)\n *     Renders the given command with the options\n * @example\n * let myView = MyView(myTemplate)\n */\nexport default class View {\n\t/**\n\t * @constructor\n\t * @param {string} template Represent the HTML template of a todo\n\t */\n\tconstructor(template) {\n\t\t/**\n\t\t * @type {string} template\n\t\t */\n\t\tthis.template = template;\n\n\t\t/**\n\t\t * @type {number} Key code for the Enter touch\n\t\t */\n\t\tthis.ENTER_KEY = 13;\n\t\t/**\n\t\t * @type {number} Key code for the Escape touch\n\t\t */\n\t\tthis.ESCAPE_KEY = 27;\n\n\t\t/**\n\t\t * @type {object} Represent the HTML tag that contains the \".todo-list\" class\n\t\t */\n\t\tthis.$todoList = helpers.qs(\".todo-list\");\n\t\t/**\n\t\t * @type {object} Represent the HTML tag that contains the \".todo-count\" class\n\t\t */\n\t\tthis.$todoItemCounter = helpers.qs(\".todo-count\");\n\t\t/**\n\t\t * @type {object} Represent the HTML tag that contains the \".clear-completed\" class\n\t\t */\n\t\tthis.$clearCompleted = helpers.qs(\".clear-completed\");\n\t\t/**\n\t\t * @type {object} Represent the HTML tag that contains the \".main\" class\n\t\t */\n\t\tthis.$main = helpers.qs(\".main\");\n\t\t/**\n\t\t * @type {object} Represent the HTML tag that contains the \".footer\" class\n\t\t */\n\t\tthis.$footer = helpers.qs(\".footer\");\n\t\t/**\n\t\t * @type {object} Represent the HTML tag that contains the \".toggle-all\" class\n\t\t */\n\t\tthis.$toggleAll = helpers.qs(\".toggle-all\");\n\t\t/**\n\t\t * @type {object} Represent the HTML tag that contains the \".new-todo\" class\n\t\t */\n\t\tthis.$newTodo = helpers.qs(\".new-todo\");\n\t}\n\t/**\n\t *\n\t * @param {number} id The id of the todo to remove\n\t */\n\t_removeItem(id) {\n\t\tlet elem = helpers.qs('[data-id=\"' + id + '\"]');\n\n\t\tif (elem) {\n\t\t\tthis.$todoList.removeChild(elem);\n\t\t}\n\t}\n\t/**\n\t *\n\t * @param {number} completedCount Number of completed todos\n\t * @param {boolean} visible Control the visibility of the \"clear completed\" button\n\t */\n\t_clearCompletedButton(completedCount, visible) {\n\t\tthis.$clearCompleted.innerHTML = this.template.clearCompletedButton(\n\t\t\tcompletedCount\n\t\t);\n\t\tthis.$clearCompleted.style.display = visible ? \"block\" : \"none\";\n\t}\n\n\t/**\n\t *\n\t * @param {string} currentPage The name of the current page\n\t */\n\t_setFilter(currentPage) {\n\t\thelpers.qs(\".filters .selected\").className = \"\";\n\t\thelpers.qs('.filters [href=\"#/' + currentPage + '\"]').className =\n\t\t\t\"selected\";\n\t}\n\n\t/**\n\t *\n\t * @param {number} id The id of the todo to toggle status\n\t * @param {boolean} completed Indicate the todo state\n\t */\n\t_elementComplete(id, completed) {\n\t\tlet listItem = helpers.qs('[data-id=\"' + id + '\"]');\n\n\t\tif (!listItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tlistItem.className = completed ? \"completed\" : \"\";\n\n\t\t// In case it was toggled from an event and not by clicking the checkbox\n\t\thelpers.qs(\"input\", listItem).checked = completed;\n\t}\n\t/**\n\t *\n\t * @param {number} id The id of the todo to edit\n\t * @param {string} title The title of the todo to edit\n\t */\n\t_editItem(id, title) {\n\t\tlet listItem = helpers.qs('[data-id=\"' + id + '\"]');\n\n\t\tif (!listItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tlistItem.className = listItem.className + \" editing\";\n\n\t\tlet input = document.createElement(\"input\");\n\t\tinput.className = \"edit\";\n\n\t\tlistItem.appendChild(input);\n\t\tinput.focus();\n\t\tinput.value = title;\n\t}\n\t/**\n\t *\n\t * @param {number} id The id of the todo that has been edited\n\t * @param {string} title The name of the todo that has been edited\n\t */\n\t_editItemDone(id, title) {\n\t\tlet listItem = helpers.qs('[data-id=\"' + id + '\"]');\n\n\t\tif (!listItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet input = helpers.qs(\"input.edit\", listItem);\n\t\tlistItem.removeChild(input);\n\n\t\tlistItem.className = listItem.className.replace(\"editing\", \"\");\n\n\t\thelpers.qsa(\"label\", listItem).forEach(function(label) {\n\t\t\tlabel.textContent = title;\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {string} viewCmd The name of the command to reach (which equivalent to a viewCommands method)\n\t * @param {object|Array|string|number} parameter Parameter to change for a todo or multiple todos\n\t */\n\trender(viewCmd, parameter) {\n\t\tlet viewCommands = {\n\t\t\tshowEntries: () => {\n\t\t\t\tthis.$todoList.innerHTML = this.template.show(parameter);\n\t\t\t},\n\t\t\tremoveItem: () => {\n\t\t\t\tthis._removeItem(parameter);\n\t\t\t},\n\t\t\tupdateElementCount: () => {\n\t\t\t\tthis.$todoItemCounter.innerHTML = this.template.itemCounter(parameter);\n\t\t\t},\n\t\t\tclearCompletedButton: () => {\n\t\t\t\tthis._clearCompletedButton(parameter.completed, parameter.visible);\n\t\t\t},\n\t\t\tcontentBlockVisibility: () => {\n\t\t\t\tthis.$main.style.display = this.$footer.style.display = parameter.visible\n\t\t\t\t\t? \"block\"\n\t\t\t\t\t: \"none\";\n\t\t\t},\n\t\t\ttoggleAll: () => {\n\t\t\t\tthis.$toggleAll.checked = parameter.checked; // * if all todo are completed parameter.checked = true otherwise false\n\t\t\t},\n\t\t\tsetFilter: () => {\n\t\t\t\tthis._setFilter(parameter);\n\t\t\t},\n\t\t\tclearNewTodo: () => {\n\t\t\t\tthis.$newTodo.value = \"\";\n\t\t\t},\n\t\t\telementComplete: () => {\n\t\t\t\tthis._elementComplete(parameter.id, parameter.completed);\n\t\t\t},\n\t\t\teditItem: () => {\n\t\t\t\tthis._editItem(parameter.id, parameter.title);\n\t\t\t},\n\t\t\teditItemDone: () => {\n\t\t\t\tthis._editItemDone(parameter.id, parameter.title);\n\t\t\t}\n\t\t};\n\n\t\tviewCommands[viewCmd]();\n\t}\n\n\t/**\n\t *\n\t * @param {object} element Represent the HTML tag of the targeted element\n\t * @return {number} The id of the parent li element of the targeted HTML tag\n\t */\n\t_itemId(element) {\n\t\tlet li = helpers.$parent(element, \"li\");\n\t\treturn parseInt(li.dataset.id, 10);\n\t}\n\n\t/**\n\t *\n\t * @param {function} handler Callback function\n\t */\n\t_bindItemEditDone(handler) {\n\t\tlet self = this;\n\t\thelpers.$delegate(self.$todoList, \"li .edit\", \"blur\", function() {\n\t\t\tif (!this.dataset.iscanceled) {\n\t\t\t\thandler({\n\t\t\t\t\tid: self._itemId(this),\n\t\t\t\t\ttitle: this.value\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\thelpers.$delegate(self.$todoList, \"li .edit\", \"keypress\", function(event) {\n\t\t\tif (event.keyCode === self.ENTER_KEY) {\n\t\t\t\t// Remove the cursor from the input when you hit enter just like if it\n\t\t\t\t// were a real form\n\t\t\t\tthis.blur();\n\t\t\t}\n\t\t});\n\t}\n\t/**\n\t *\n\t * @param {function} handler Callback function\n\t */\n\t_bindItemEditCancel(handler) {\n\t\tlet self = this;\n\t\thelpers.$delegate(self.$todoList, \"li .edit\", \"keyup\", function(event) {\n\t\t\tif (event.keyCode === self.ESCAPE_KEY) {\n\t\t\t\tthis.dataset.iscanceled = true;\n\t\t\t\tthis.blur();\n\n\t\t\t\thandler({ id: self._itemId(this) });\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {string} event Name of the event\n\t * @param {function} handler callback function\n\t */\n\tbind(event, handler) {\n\t\tlet self = this;\n\t\t// * check how this callback works\n\t\tif (event === \"newTodo\") {\n\t\t\thelpers.$on(this.$newTodo, \"change\", () => {\n\t\t\t\thandler(this.$newTodo.value);\n\t\t\t});\n\t\t} else if (event === \"removeCompleted\") {\n\t\t\thelpers.$on(this.$clearCompleted, \"click\", () => {\n\t\t\t\thandler();\n\t\t\t});\n\t\t} else if (event === \"toggleAll\") {\n\t\t\thelpers.$on(this.$toggleAll, \"click\", function() {\n\t\t\t\thandler({ completed: this.checked });\n\t\t\t});\n\t\t} else if (event === \"itemEdit\") {\n\t\t\thelpers.$delegate(this.$todoList, \"li label\", \"dblclick\", function() {\n\t\t\t\thandler({ id: self._itemId(this) });\n\t\t\t});\n\t\t} else if (event === \"itemRemove\") {\n\t\t\thelpers.$delegate(this.$todoList, \".destroy\", \"click\", function() {\n\t\t\t\thandler({ id: self._itemId(this) });\n\t\t\t});\n\t\t} else if (event === \"itemToggle\") {\n\t\t\thelpers.$delegate(this.$todoList, \".toggle\", \"click\", function() {\n\t\t\t\thandler({\n\t\t\t\t\tid: self._itemId(this),\n\t\t\t\t\tcompleted: this.checked\n\t\t\t\t});\n\t\t\t});\n\t\t} else if (event === \"itemEditDone\") {\n\t\t\tthis._bindItemEditDone(handler);\n\t\t} else if (event === \"itemEditCancel\") {\n\t\t\tthis._bindItemEditCancel(handler);\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/js/components/view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "class",
    "name": "View",
    "memberof": "js/components/view.js",
    "static": true,
    "longname": "js/components/view.js~View",
    "access": "public",
    "export": true,
    "importPath": "./js/components/view.js",
    "importStyle": "View",
    "description": "View that abstracts away the browser's DOM completely.\nIt has two simple entry points:\n\n  - bind(eventName, handler)\n    Takes a todo application event and registers the handler\n  - render(command, parameterObject)\n    Renders the given command with the options",
    "examples": [
      "let myView = MyView(myTemplate)"
    ],
    "lineNumber": 15,
    "interface": false
  },
  {
    "__docId__": 124,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "Represent the HTML template of a todo"
      }
    ]
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "template",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#template",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "ENTER_KEY",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#ENTER_KEY",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "ESCAPE_KEY",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#ESCAPE_KEY",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "$todoList",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#$todoList",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "$todoItemCounter",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#$todoItemCounter",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "$clearCompleted",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#$clearCompleted",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "$main",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#$main",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "$footer",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#$footer",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "$toggleAll",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#$toggleAll",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "$newTodo",
    "memberof": "js/components/view.js~View",
    "static": false,
    "longname": "js/components/view.js~View#$newTodo",
    "access": "public",
    "description": "",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "_removeItem",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#_removeItem",
    "access": "private",
    "description": "",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the todo to remove"
      }
    ],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "_clearCompletedButton",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#_clearCompletedButton",
    "access": "private",
    "description": "",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "completedCount",
        "description": "Number of completed todos"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": "Control the visibility of the \"clear completed\" button"
      }
    ],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "_setFilter",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#_setFilter",
    "access": "private",
    "description": "",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "currentPage",
        "description": "The name of the current page"
      }
    ],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "_elementComplete",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#_elementComplete",
    "access": "private",
    "description": "",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the todo to toggle status"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "completed",
        "description": "Indicate the todo state"
      }
    ],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "_editItem",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#_editItem",
    "access": "private",
    "description": "",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the todo to edit"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "The title of the todo to edit"
      }
    ],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "_editItemDone",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#_editItemDone",
    "access": "private",
    "description": "",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the todo that has been edited"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "title",
        "description": "The name of the todo that has been edited"
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "render",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#render",
    "access": "public",
    "description": "",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "viewCmd",
        "description": "The name of the command to reach (which equivalent to a viewCommands method)"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "Array",
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "parameter",
        "description": "Parameter to change for a todo or multiple todos"
      }
    ],
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "_itemId",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#_itemId",
    "access": "private",
    "description": "",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "Represent the HTML tag of the targeted element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The id of the parent li element of the targeted HTML tag"
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "_bindItemEditDone",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#_bindItemEditDone",
    "access": "private",
    "description": "",
    "lineNumber": 218,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Callback function"
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "_bindItemEditCancel",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#_bindItemEditCancel",
    "access": "private",
    "description": "",
    "lineNumber": 241,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Callback function"
      }
    ],
    "return": null
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "bind",
    "memberof": "js/components/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/view.js~View#bind",
    "access": "public",
    "description": "",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Name of the event"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "callback function"
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# to-do list app\n\nHave peace of mind by adding all your tasks to your **to-do list** (wherever you are or whatever device you use).\n\n**to-do list** is a SPA (single page application) modeling a simple todo list allowing you to add and follow your day-to-day tasks :\n\nPlease **[try it out](https://mysite.com)**!!\n\n![todos homepage](/images/tuto/screenshot_todos.png)\n\nIt has never been easier to add, modify, delete, filter your todos!\nBut if you need, check the **[tutorial](./manual/tutorial.html)** for more details!\n\nCheck the **[manual](./manual)** if you want to dive into code details for future evolution and maintenance.\n",
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"private\": true,\n  \"dependencies\": {\n    \"todomvc-common\": \"^1.0.1\",\n    \"todomvc-app-css\": \"^2.0.1\"\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"jasmine-core\": \"^2.0.0\"\n  }\n}",
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "content": "# Index\n",
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/manual/index.md",
    "name": "./manual/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/manual/asset",
    "name": "./manual/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/manual/overview.md",
    "name": "./manual/overview.md",
    "content": "# Overview\n\nHave peace of mind by adding all your tasks to your **to-do list** (wherever you are or whatever device you use).\n\n**to-do list** is a SPA (single page application) modeling a simple todo list allowing you to add and follow your day-to-day tasks :\n\nPlease [try it out](https://todos.mokokom.com/)!!\n\n![todos homepage](/images/tuto/screenshot_todos.png)\n\nDocumentation:\n\n1. Check the [tutorial](./tutorial.html) to see how the to-do list works.\n1. Check the [application_architecture](./application_architecture.html) to understand the main elements that make up the application.\n1. check the [benchmarking](./benchmarking.html)\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/manual/application_architecture.md",
    "name": "./manual/application_architecture.md",
    "content": "# Application architecture\n\nThe overwall app is based on the [Model–View–Controller](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller) (MVC) software design pattern. The files interact with each other using the ES6 `export` / `import` modules.\n\n### Application's structure diagram\n\n![app file structure](/images/app_architecture/Todo_app_schema.png)\n\n_Todo application MVC architecture_\n\n### Application's files structure\n\n![app file structure](/images/app_architecture/app_files_structure.png)\n\n_Application's files structure_\n\n`index.html` is the skeleton of the website homepage. It loads all scripts.\n\n`app.js` launch the app by initializing the view.\n\n`components` folder contain seven files. Each file represents a ES6 class module:\n\n1.  `controllers.js` ([see documentation](/docs/class/js/components/controller.js~Controller.html))\n2.  `helpers.js` ([see documentation](/docs/class/js/components/helpers.js~Helpers.html))\n3.  `model.js` ([see documentation](/docs/class/js/components/model.js~Model.html))\n4.  `store.js` ([see documentation](/docs/class/js/components/store.js~Store.html))\n5.  `template.js` ([see documentation](/docs/class/js/components/template.js~Template.html))\n6.  `todo.js` ([see documentation](/docs/class/js/components/todo.js~Todo.html))\n7.  `view.js` ([see documentation](/docs/class/js/components/view.js~View.html))\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/manual/tutorial.md",
    "name": "./manual/tutorial.md",
    "content": "# Tutorial\n\n![todos homepage](/images/tuto/todos_homepage.png)\n\n### Add a todo\n\n- write your todo\n\n![todos homepage](/images/tuto/first_todo.png)\n\n- press Enter or click somewhere in the page to add it to the list\n\n![todos homepage](/images/tuto/first_todo_added.png)\n\n### Modify a todo\n\n- double click the todo you want to modify\n\n![todos homepage](/images/tuto/todo_tobe_modify.png)\n\n- make your change\n- press Enter or click somewhere in the page to add it in the list\n\n![todos homepage](/images/tuto/todo_modify.png)\n\n### Delete a todo\n\n- click on the red cross on todo's right side when hovering it\n\n![todos homepage](/images/tuto/todo_tobe_delete.png)\n\n### Toggle state\n\nToggle a todo or multiple todos state according on the initial state before clicking it\n\n1. toggle state of a todo\n   - click on the circle on the todo's left side.\n\n![todos homepage](/images/tuto/todo_tobe_toggle.png)\n![todos homepage](/images/tuto/todo_toggle.png)\n\n2. toggle state of multiple todos\n   - click on as many circles to remove as many todo\n\n![todos homepage](/images/tuto/todos_toggle.png)\n\n- or click on the arrow on the input left side to toggle all todos\n\n![todos homepage](/images/tuto/todos_toggleAll.png)\n\n### Clear completed\n\nClick the \"clear complete\" button which shows up on the bottom right corner when at least one todo is completed\n\n![todos homepage](/images/tuto/clear_completed_todos.png)\n\n### Filter\n\n- click \"All\" button to see all todos (completed or note)\n\n![todos homepage](/images/tuto/seeAll_todos.png)\n\n- click \"Active\" button to see uncompleted todos\n\n![todos homepage](/images/tuto/seeActive_todos.png)\n\n- click \"Completed\" button to see completed todos\n\n![todos homepage](/images/tuto/seeCompleted_todos.png)\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/manual/benchmarking.md",
    "name": "./manual/benchmarking.md",
    "content": "# Benchmarking\n\nThe benchmarking will be based on the competitor site **[todolistme.net](http://todolistme.net/)**\n\n## Global application overview\n\n### Features\n\n**[todolistme](http://todolistme.net/)** is an todo list app. Its functionalities are as follows:\n\n- create, delete, modify a custom list for the todos\n- switch between your todos lists\n- add, remove, modify a todo in whichever list\n- organize todos according to four filter\n- print todos list\n- set a due date for tasks\n- syncing option, to share or synchronise your todos with friends or multiple devices\n- remote option, to open the todo list in a small new window\n\n### Technology lookup\n\n![Technology lookup](/images/benchmarking/technology_lookup.png)\n\n_generate with [Wappalizer](https://www.wappalyzer.com/)_\n\n## Performance\n\nThe test performance compare your **[to-do list](https://todos.mokokom.com/)** app and **[todolistme.net](http://todolistme.net/)**.\n\n### Network\n\nPerformance testing details\n\n| title          | infos                                                                                                          |\n| -------------- | -------------------------------------------------------------------------------------------------------------- |\n| **Navigator**  | Google Chrome Version 78.0.3904.70                                                                             |\n| **Parameters** | - incognito mode<br> - disabled cache <br> - default online connection <br> - both site are hosted on a server |\n| **Tools**      | Chrome DevTools <br> - Network <br> - Coverage                                                                 |\n\n1. **[to-do list](https://todos.mokokom.com/)** network performances\n\n|                                                                                                                                                        | **[to-do list](https://todos.mokokom.com/)**                                                                                          |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------- |\n| <br>**requests**: 13 <br>**transfered**: 16.1KB <br>**ressources**: 46.3KB <br>**finish**: 397ms <br>**DOMContentLoaded**: 410ms <br>**loaded**: 409ms | ![Technology lookup](/images/benchmarking/performance/todos_overwall_network.png) <br>                                                |\n| Note                                                                                                                                                   | Except the one HTTP communication protocol error with <code>onlearn.json</code>, everything seems to work find and load in time. <br> |\n| **Improvement**                                                                                                                                        | fix issue <code>onlearn.json</code> file <br>                                                                                         |\n\n2. **[todolistme.net](http://todolistme.net/)** network performances\n\n|                                                                                                                                                       | **[todolistme.net](http://todolistme.net/)** <br>                                                                                                                                                                            |\n| ----------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| <br>**requests**: 116 <br>**transfered**: 2.5MB <br>**ressources**: 5.0MB <br>**finish**: 5.71s <br>**DOMContentLoaded**: 1.35s <br>**loaded**: 4.22s | ![Technology lookup](/images/benchmarking/performance/todolistme_overall_network.png) <br>                                                                                                                                   |\n| Note 1                                                                                                                                                | <br> png files (texture.png load in 1.08s!), ads and <code>jquery-ui.js</code> slow down site's loading. See below: <br> ![loading content todolistme](/images/benchmarking/performance/loading_content_todolistme.png) <br> |\n| Note 2                                                                                                                                                | <br> coverage tool show that only 95,6% of jQuery and 97.2% of jquery-ui is used <br> ![jQuery coverage](/images/benchmarking/performance/jquery_coverage.png) <br>                                                          |\n| **Improvements**                                                                                                                                      | <br> - optimization of png files (ex: replace texture.png background with CSS background or SVG ) <br> - block ads <br> - ES6 instead of jQuery <br> - integrated only useful jquery-ui functions <br> - use cache <br>      |\n\n### Audit\n\nAudit details\n\n| title          | infos                                                                                         |\n| -------------- | --------------------------------------------------------------------------------------------- |\n| **Navigator**  | Google Chrome Version 78.0.3904.70                                                            |\n| **Device**     | Desktop                                                                                       |\n| **Audits**     | - Performance<br> - Progressive web app <br> - Best practices <br> - Accessibility <br> - SEO |\n| **Throttling** | Applied slow 4G, 4x CPU Slowdown                                                              |\n|                | Clear storage                                                                                 |\n\n1. **[to-do list](https://todos.mokokom.com/)** audit\n\n|                         | **[to-do list](https://todos.mokokom.com/)**                                 | Improvements                                                                                                                                                                                          |\n| ----------------------- | ---------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Global score**        | ![todos global score](/images/benchmarking/audit/todos_global_score.png)     | - Accessibility <br> - SEO                                                                                                                                                                            |\n| **Performance**         | ![todos performance](/images/benchmarking/audit/todos_perf.png)              | - Preload key requests: add <code>\\<link rel=preload></code> to prioritize fetching resources that are currently requested later in page load.                                                        |\n| **Accessibility**       | ![todos accessibility](/images/benchmarking/audit/todos_perf.png)            | - Form elements do not have associated labels: add <code>type=\"text\"</code> to the <code>input</code> element in index.html                                                                           |\n| **Best practices**      | ![todos best practices](/images/benchmarking/audit/todos_best_practices.png) | - Browser errors were logged to the console: learn.json, _Failed to load resource: the server responded with a status of 404_                                                                         |\n| **SEO**                 | ![todos seo](/images/benchmarking/audit/todos_seo.png)                       | - add <code>\\<meta name=\"viewport\"></code> tag with <code>width</code> or <code>initial-scale</code> <br> - add <code>meta description</code> <br> - add description text to link in /docs/index.html |\n| **Progressive web app** | ![todos progressive web app](/images/benchmarking/audit/todos_pwa.png)       | - add service worker to the app to cache files locally and use it offline <br> - prompt user to install the web app <br> - configure a custom splash screen                                           |\n\n2. **[todolistme.net](http://todolistme.net/)** audit\n\n|                         | **[to-do list](https://todos.mokokom.com/)**                           | Improvements                                                                                                                                                                                                                                                         |\n| ----------------------- | ---------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Global score**        | ![todos global score](/images/benchmarking/audit/tlm_global_score.png) | - Performance <br> - Accessibility <br> - Best practices <br> - SEO <br> - Progressive web app                                                                                                                                                                       |\n| **Performance**         | ![todos performance](/images/benchmarking/audit/tlm_perf.png)          | - Serve images in next-gen formats <br> - Eliminate render-blocking resources <br> - Minify JavaScript <br> - Remove unused CSS <br> - Defer offscreen images                                                                                                        |\n| **Accessibility**       | ![todos accessibility](/images/benchmarking/audit/tlm_access.png)      | - [id] attributes on the page are not unique <br> - <code>\\<frame></code> elements do not have a title <br> - Image elements do not have [alt] attributes <br> - Form elements do not have associated labels <br> - \\<html> element does not have a [lang] attribute |\n| **Best practices**      | ![todos best practices](/images/benchmarking/audit/tlm_best_pract.png) | - Does not use HTTPS <br> - Does not use HTTP/2 for all of its resources <br> - Uses document.write() <br> - Includes front-end JavaScript libraries with known security vulnerabilities                                                                             |\n| **SEO**                 | ![todos seo](/images/benchmarking/audit/tlm_seo.png)                   | - Does not have a <code>\\<meta name=\"viewport\"></code> tag with width or initial-scale <br> - Image elements do not have [alt] attributes                                                                                                                            |\n| **Progressive web app** | ![todos progressive web app](/images/benchmarking/audit/todos_pwa.png) | - add service worker to the app to cache files locally and use it offline <br> - prompt user to install the web app <br> - configure a custom splash screen                                                                                                          |\n\nnotes comparaison:\n\n- security https vs no https\n- ES6 vs old js\n- no librairie to load vs jQuery and jQuery UI\n- not lot of feature vs more features\n- both app are not fit for PWA\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/CHANGELOG.md",
    "name": "./CHANGELOG.md",
    "content": "",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 146,
    "kind": "testFile",
    "name": "test/ControllerSpec.js",
    "content": "/*global app, jasmine, describe, it, beforeEach, expect */\n\nimport Controller from \"../js/components/controller.js\";\n\ndescribe(\"controller\", function() {\n\t\"use strict\";\n\n\tvar subject, model, view;\n\n\tvar setUpModel = function(todos) {\n\t\tmodel.read.and.callFake(function(query, callback) {\n\t\t\tcallback = callback || query;\n\t\t\tcallback(todos);\n\t\t});\n\n\t\tmodel.getCount.and.callFake(function(callback) {\n\t\t\tvar todoCounts = {\n\t\t\t\tactive: todos.filter(function(todo) {\n\t\t\t\t\treturn !todo.completed;\n\t\t\t\t}).length,\n\t\t\t\tcompleted: todos.filter(function(todo) {\n\t\t\t\t\treturn !!todo.completed;\n\t\t\t\t}).length,\n\t\t\t\ttotal: todos.length\n\t\t\t};\n\n\t\t\tcallback(todoCounts);\n\t\t});\n\n\t\tmodel.remove.and.callFake(function(id, callback) {\n\t\t\tcallback();\n\t\t});\n\n\t\tmodel.create.and.callFake(function(title, callback) {\n\t\t\tcallback();\n\t\t});\n\n\t\tmodel.update.and.callFake(function(id, updateData, callback) {\n\t\t\tcallback();\n\t\t});\n\t};\n\n\tvar createViewStub = function() {\n\t\tvar eventRegistry = {}; // * object that stock an event attached to the handler (here the constructor Controller)\n\t\t// * \"eventRegistry\" == \"viewCommands\" in view.js l.137\n\t\treturn {\n\t\t\trender: jasmine.createSpy(\"render\"),\n\t\t\tbind: function(event, handler) {\n\t\t\t\t// * see controller.js l.17. It fake the result of View.prototype.bind l.178\n\t\t\t\teventRegistry[event] = handler;\n\t\t\t},\n\t\t\ttrigger: function(event, parameter) {\n\t\t\t\t// * \"event\" == \"viewCmd\" in view.js l.137\n\t\t\t\teventRegistry[event](parameter); // * ==  viewCommands[viewCmd]() in view.js l.137\n\t\t\t}\n\t\t};\n\t};\n\n\tbeforeEach(function() {\n\t\tmodel = jasmine.createSpyObj(\"model\", [\n\t\t\t\"read\",\n\t\t\t\"getCount\",\n\t\t\t\"remove\",\n\t\t\t\"create\",\n\t\t\t\"update\"\n\t\t]);\n\t\tview = createViewStub();\n\t\tsubject = new Controller(model, view); // * linked with script on SpecRunner.html\n\t});\n\n\tit(\"should show entries on start-up\", function() {\n\t\t/* // TODO: write test\n\t\tsetUpModel([]); // * on start-up no todo created, storage.js create an empty array\n\n\t\tsubject.setView(\"#/\"); // * on start-up first page is homepage -> \"\" = All\n\n\t\texpect(view.render).toHaveBeenCalled(); // * // via Controller.vetView the view.render method is called indirectyl */\n\n\t\tsubject.setView(\"\");\n\n\t\texpect(subject._activeRoute).toBeDefined();\n\t});\n\n\tdescribe(\"routing\", function() {\n\t\tit(\"should show all entries without a route\", function() {\n\t\t\tvar todo = { title: \"my todo\" };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\"); // * Set view is a prototype method from controller.js. This method calls indirectly the view.render method\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"showEntries\", [todo]); // * showEntries is first arg in controller.js prototype showAll, showCompleted and showActive methods\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"setFilter\", \"\");\n\t\t});\n\n\t\tit('should show all entries without \"all\" route', function() {\n\t\t\tvar todo = { title: \"my todo\" };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"#/\");\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"showEntries\", [todo]);\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"setFilter\", \"\");\n\t\t});\n\n\t\tit(\"should show active entries\", function() {\n\t\t\t// TODO: write test\n\t\t\tlet todo = { title: \"my todo\" };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"#/active\");\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"showEntries\", [todo]);\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"setFilter\", \"active\");\n\t\t});\n\n\t\tit(\"should show completed entries\", function() {\n\t\t\t// TODO: write test\n\t\t\tlet todo = { title: \"my todo\" };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"#/completed\");\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"showEntries\", [todo]);\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"setFilter\", \"completed\");\n\t\t});\n\t});\n\n\tit(\"should show the content block when todos exists\", function() {\n\t\tsetUpModel([{ title: \"my todo\", completed: true }]);\n\n\t\tsubject.setView(\"\");\n\n\t\texpect(view.render).toHaveBeenCalledWith(\"contentBlockVisibility\", {\n\t\t\tvisible: true\n\t\t});\n\t});\n\n\tit(\"should hide the content block when no todos exists\", function() {\n\t\tsetUpModel([]);\n\n\t\tsubject.setView(\"\");\n\n\t\texpect(view.render).toHaveBeenCalledWith(\"contentBlockVisibility\", {\n\t\t\tvisible: false\n\t\t});\n\t});\n\n\tit(\"should check the toggle all button, if all todos are completed\", function() {\n\t\tsetUpModel([\n\t\t\t{ title: \"my todo\", completed: true },\n\t\t\t{ title: \"my todo2\", completed: true }\n\t\t]);\n\n\t\tsubject.setView(\"\");\n\n\t\texpect(view.render).toHaveBeenCalledWith(\"toggleAll\", {\n\t\t\tchecked: true\n\t\t});\n\t});\n\n\t// * added by me\n\tit(\"should check the toggle all button, if all todos are not completed\", function() {\n\t\tsetUpModel([\n\t\t\t{ title: \"my todo\", completed: true },\n\t\t\t{ title: \"my todo\", completed: false }\n\t\t]);\n\n\t\tsubject.setView(\"\");\n\n\t\texpect(view.render).toHaveBeenCalledWith(\"toggleAll\", {\n\t\t\tchecked: false\n\t\t});\n\t});\n\n\tit('should set the \"clear completed\" button', function() {\n\t\tvar todo = { id: 42, title: \"my todo\", completed: true };\n\t\tsetUpModel([todo]);\n\n\t\tsubject.setView(\"\");\n\n\t\texpect(view.render).toHaveBeenCalledWith(\"clearCompletedButton\", {\n\t\t\tcompleted: 1,\n\t\t\tvisible: true\n\t\t});\n\t});\n\n\t// * added by me\n\tit('should unset the \"clear completed\" button', function() {\n\t\tsetUpModel([\n\t\t\t{ title: \"my todo\", completed: false },\n\t\t\t{ title: \"my todo2\", completed: false }\n\t\t]);\n\n\t\tsubject.setView(\"\");\n\n\t\texpect(view.render).toHaveBeenCalledWith(\"clearCompletedButton\", {\n\t\t\tcompleted: 0,\n\t\t\tvisible: false\n\t\t});\n\t});\n\n\tit('should highlight \"All\" filter by default', function() {\n\t\t// TODO: write test\n\t\tsubject.setView(\"\");\n\n\t\texpect(view.render).toHaveBeenCalledWith(\"setFilter\", \"\");\n\t});\n\n\tit('should highlight \"Active\" filter when switching to active view', function() {\n\t\t// TODO: write test\n\t\tsubject.setView(\"#/active\");\n\n\t\texpect(view.render).toHaveBeenCalledWith(\"setFilter\", \"active\");\n\t});\n\n\tdescribe(\"toggle all\", function() {\n\t\tit(\"should toggle all todos to completed\", function() {\n\t\t\t// TODO: write test\n\t\t\tsetUpModel([\n\t\t\t\t{ id: 11, title: \"my todo\", completed: false },\n\t\t\t\t{ id: 12, title: \"my todo\", completed: false }\n\t\t\t]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tmodel.getCount.and.callFake(function(callback) {\n\t\t\t\t// * simule that all todos are turn to completed. Note: model.getCount is update but model.read is still completed.false\n\t\t\t\tcallback({\n\t\t\t\t\tactive: 0,\n\t\t\t\t\tcompleted: 2,\n\t\t\t\t\ttotal: 2\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tview.trigger(\"toggleAll\", { completed: true }); // * act as controller.js l.46 to act as toggleAll has been clicked\n\n\t\t\texpect(model.getCount).toHaveBeenCalledWith(jasmine.any(Function)); // * controller.js l.240 check and send back object that list active, completed and total of todos\n\t\t\texpect(model.read).toHaveBeenCalledWith(\n\t\t\t\t{ completed: false }, // * controller.js l.224, searching uncompleted todo to turn them completed\n\t\t\t\tjasmine.any(Function)\n\t\t\t);\n\t\t\texpect(model.update).toHaveBeenCalledWith(\n\t\t\t\t11,\n\t\t\t\t{ completed: true },\n\t\t\t\tjasmine.any(Function)\n\t\t\t);\n\t\t\texpect(model.update).toHaveBeenCalledWith(\n\t\t\t\t12,\n\t\t\t\t{ completed: true },\n\t\t\t\tjasmine.any(Function)\n\t\t\t);\n\t\t\t/* expect(view.render).toHaveBeenCalledWith(\"updateElementCount\", 0); */\n\t\t});\n\n\t\tit(\"should update the view\", function() {\n\t\t\t// TODO: write test\n\t\t\tsetUpModel([\n\t\t\t\t{\n\t\t\t\t\tid: 42,\n\t\t\t\t\ttitle: \"my todo\",\n\t\t\t\t\tcompleted: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 41,\n\t\t\t\t\ttitle: \"my todo2\",\n\t\t\t\t\tcompleted: false\n\t\t\t\t}\n\t\t\t]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\t// * added by me\n\t\t\tview.render.calls.reset(); // *  Reset this spy as if it has never been called.\n\t\t\tmodel.read.calls.reset();\n\t\t\tmodel.getCount.and.callFake(function(callback) {\n\t\t\t\tcallback({\n\t\t\t\t\tactive: 0,\n\t\t\t\t\tcompleted: 2,\n\t\t\t\t\ttotal: 2\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tview.trigger(\"toggleAll\", { id: 42, completed: true });\n\t\t\tview.trigger(\"toggleAll\", { id: 41, completed: true });\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"elementComplete\", {\n\t\t\t\tid: 42,\n\t\t\t\tcompleted: true\n\t\t\t});\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"elementComplete\", {\n\t\t\t\tid: 41,\n\t\t\t\tcompleted: true\n\t\t\t});\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"toggleAll\", { checked: true }); // * controller.js l.247: this update the toggleAll button from grey to dark\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"updateElementCount\", 0); // * controller.js l.241: check all todos.active -> in this case 0 because when toggleAll clicked it modify all todos.active to todos.completes\n\t\t});\n\t});\n\n\tdescribe(\"new todo\", function() {\n\t\tit(\"should add a new todo to the model\", function() {\n\t\t\t// TODO: write test`\n\t\t\tsetUpModel([]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"newTodo\", \"a new todo\");\n\n\t\t\texpect(model.create).toHaveBeenCalledWith(\n\t\t\t\t\"a new todo\",\n\t\t\t\tjasmine.any(Function)\n\t\t\t);\n\t\t\texpect(model.read).toHaveBeenCalledWith(jasmine.any(Function));\n\t\t\texpect(model.getCount).toHaveBeenCalledWith(jasmine.any(Function));\n\t\t\texpect(model.create).toHaveBeenCalledWith(\n\t\t\t\t\"a new todo\",\n\t\t\t\tjasmine.any(Function)\n\t\t\t);\n\t\t});\n\n\t\tit(\"should add a new todo to the view\", function() {\n\t\t\tsetUpModel([]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.render.calls.reset(); // *  Reset this spy as if it has never been called.\n\t\t\tmodel.read.calls.reset();\n\t\t\tmodel.read.and.callFake(function(callback) {\n\t\t\t\t// * By chaining the spy with and.callFake, all calls to the spy will delegate to the supplied function.\n\t\t\t\tcallback([\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"a new todo\",\n\t\t\t\t\t\tcompleted: false\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t});\n\t\t\t// * model.read act as the model.js read method which return the todos parse list\n\n\t\t\tview.trigger(\"newTodo\", \"a new todo\"); // equal line in view.js l.137 ? no\n\t\t\t// * trigger should act as View.protoype.bind. Here \"a new todo\" equal the result of handler in \"if(event === newTodo)\" statement where event is \"newTodo\"\n\n\t\t\texpect(model.read).toHaveBeenCalled();\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"showEntries\", [\n\t\t\t\t{\n\t\t\t\t\ttitle: \"a new todo\",\n\t\t\t\t\tcompleted: false\n\t\t\t\t}\n\t\t\t]);\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"clearNewTodo\");\n\t\t});\n\n\t\tit(\"should clear the input field when a new todo is added\", function() {\n\t\t\tsetUpModel([]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"newTodo\", \"a new todo\");\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"clearNewTodo\");\n\t\t});\n\t});\n\n\tdescribe(\"element removal\", function() {\n\t\tit(\"should remove an entry from the model\", function() {\n\t\t\t// TODO: write test\n\t\t\tvar todo = { id: 42, title: \"my todo\", completed: true };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemRemove\", { id: 42 });\n\n\t\t\texpect(model.read).toHaveBeenCalledWith(jasmine.any(Function));\n\n\t\t\t// * controller.js l.165: get all the todos from model.js. note: Since the return valu items is never user I delete it\n\n\t\t\texpect(model.remove).toHaveBeenCalledWith(42, jasmine.any(Function)); // * controller.js l.175\n\t\t});\n\n\t\tit(\"should remove an entry from the view\", function() {\n\t\t\tvar todo = { id: 42, title: \"my todo\", completed: true };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\t\t\tmodel.getCount.and.callFake(function(callback) {\n\t\t\t\t// * simule that we delete the only todo\n\t\t\t\tcallback({\n\t\t\t\t\tactive: 0,\n\t\t\t\t\tcompleted: 0,\n\t\t\t\t\ttotal: 0\n\t\t\t\t});\n\t\t\t});\n\t\t\tview.trigger(\"itemRemove\", { id: 42 });\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"removeItem\", 42);\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"clearCompletedButton\", {\n\t\t\t\tcompleted: 0,\n\t\t\t\tvisible: false\n\t\t\t});\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"contentBlockVisibility\", {\n\t\t\t\tvisible: false\n\t\t\t});\n\t\t});\n\n\t\tit(\"should update the element count\", function() {\n\t\t\tvar todo = { id: 42, title: \"my todo\", completed: true };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\t\t\tview.trigger(\"itemRemove\", { id: 42 });\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"updateElementCount\", 0);\n\t\t});\n\t});\n\n\tdescribe(\"remove completed\", function() {\n\t\tit(\"should remove a completed entry from the model\", function() {\n\t\t\tvar todo = { id: 42, title: \"my todo\", completed: true };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\t\t\tview.trigger(\"removeCompleted\");\n\n\t\t\texpect(model.read).toHaveBeenCalledWith(\n\t\t\t\t{ completed: true },\n\t\t\t\tjasmine.any(Function)\n\t\t\t);\n\t\t\texpect(model.remove).toHaveBeenCalledWith(42, jasmine.any(Function));\n\t\t});\n\n\t\t//* added by me\n\t\tit(\"should remove a completed entry and keep active one from the model\", function() {\n\t\t\tvar todos = [\n\t\t\t\t{ id: 42, title: \"my todo\", completed: true },\n\t\t\t\t{ id: 43, title: \"my todo2\", completed: false }\n\t\t\t];\n\t\t\tsetUpModel(todos);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tmodel.read.and.callFake(function(query, callback) {\n\t\t\t\tcallback = callback || query;\n\t\t\t\tcallback([{ id: 42, title: \"my todo\", completed: true }]);\n\t\t\t});\n\t\t\tview.trigger(\"removeCompleted\");\n\n\t\t\texpect(model.read).toHaveBeenCalledWith(\n\t\t\t\t{ completed: true },\n\t\t\t\tjasmine.any(Function)\n\t\t\t);\n\t\t\texpect(model.remove).toHaveBeenCalledWith(42, jasmine.any(Function));\n\t\t\texpect(model.remove).not.toHaveBeenCalledWith(43, jasmine.any(Function));\n\t\t});\n\n\t\tit(\"should remove a completed entry from the view\", function() {\n\t\t\tvar todo = { id: 42, title: \"my todo\", completed: true };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\t\t\tview.trigger(\"removeCompleted\");\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"removeItem\", 42);\n\t\t});\n\n\t\t// * added by me\n\t\tit(\"should remove a completed entry and keep active one from the view\", function() {\n\t\t\tvar todos = [\n\t\t\t\t{ id: 42, title: \"my todo\", completed: true },\n\t\t\t\t{ id: 43, title: \"my todo2\", completed: false }\n\t\t\t];\n\t\t\tsetUpModel(todos);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tmodel.read.and.callFake(function(query, callback) {\n\t\t\t\tcallback = callback || query;\n\t\t\t\tcallback([{ id: 42, title: \"my todo\", completed: true }]);\n\t\t\t});\n\t\t\tview.trigger(\"removeCompleted\");\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"removeItem\", 42);\n\t\t\texpect(view.render).not.toHaveBeenCalledWith(\"removeItem\", 43);\n\t\t});\n\t});\n\n\tdescribe(\"element complete toggle\", function() {\n\t\tit(\"should update the model\", function() {\n\t\t\tvar todo = { id: 21, title: \"my todo\", completed: false };\n\t\t\tsetUpModel([todo]);\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemToggle\", { id: 21, completed: true });\n\n\t\t\texpect(model.update).toHaveBeenCalledWith(\n\t\t\t\t21,\n\t\t\t\t{ completed: true },\n\t\t\t\tjasmine.any(Function)\n\t\t\t);\n\t\t});\n\n\t\tit(\"should update the view\", function() {\n\t\t\tvar todo = { id: 42, title: \"my todo\", completed: false };\n\t\t\tsetUpModel([todo]);\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemToggle\", { id: 42, completed: true });\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"elementComplete\", {\n\t\t\t\tid: 42,\n\t\t\t\tcompleted: true\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"edit item\", function() {\n\t\tit(\"should switch to edit mode\", function() {\n\t\t\tvar todo = { id: 21, title: \"my todo\", completed: false };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemEdit\", { id: 21 });\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"editItem\", {\n\t\t\t\tid: 21,\n\t\t\t\ttitle: \"my todo\"\n\t\t\t});\n\t\t});\n\n\t\tit(\"should leave edit mode on done\", function() {\n\t\t\tvar todo = { id: 21, title: \"my todo\", completed: false };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemEditDone\", { id: 21, title: \"new title\" });\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"editItemDone\", {\n\t\t\t\tid: 21,\n\t\t\t\ttitle: \"new title\"\n\t\t\t});\n\t\t});\n\n\t\tit(\"should persist the changes on done\", function() {\n\t\t\tvar todo = { id: 21, title: \"my todo\", completed: false };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemEditDone\", { id: 21, title: \"new title\" });\n\n\t\t\texpect(model.update).toHaveBeenCalledWith(\n\t\t\t\t21,\n\t\t\t\t{ title: \"new title\" },\n\t\t\t\tjasmine.any(Function)\n\t\t\t);\n\t\t});\n\n\t\tit(\"should remove the element from the model when persisting an empty title\", function() {\n\t\t\tvar todo = { id: 21, title: \"my todo\", completed: false };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemEditDone\", { id: 21, title: \"\" });\n\n\t\t\texpect(model.remove).toHaveBeenCalledWith(21, jasmine.any(Function));\n\t\t});\n\n\t\tit(\"should remove the element from the view when persisting an empty title\", function() {\n\t\t\tvar todo = { id: 21, title: \"my todo\", completed: false };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemEditDone\", { id: 21, title: \"\" });\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"removeItem\", 21);\n\t\t});\n\n\t\tit(\"should leave edit mode on cancel\", function() {\n\t\t\tvar todo = { id: 21, title: \"my todo\", completed: false };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemEditCancel\", { id: 21 });\n\n\t\t\texpect(view.render).toHaveBeenCalledWith(\"editItemDone\", {\n\t\t\t\tid: 21,\n\t\t\t\ttitle: \"my todo\"\n\t\t\t});\n\t\t});\n\n\t\tit(\"should not persist the changes on cancel\", function() {\n\t\t\tvar todo = { id: 21, title: \"my todo\", completed: false };\n\t\t\tsetUpModel([todo]);\n\n\t\t\tsubject.setView(\"\");\n\n\t\t\tview.trigger(\"itemEditCancel\", { id: 21 });\n\n\t\t\texpect(model.update).not.toHaveBeenCalled();\n\t\t});\n\t});\n});\n",
    "static": true,
    "longname": "/Users/raphaeldelorme/Documents/DEV/OCR/WIP/P8/oc_p8_dev/test/ControllerSpec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/ControllerSpec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0",
    "access": null,
    "description": "controller",
    "lineNumber": 5
  },
  {
    "__docId__": 148,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.it1",
    "access": null,
    "description": "should show entries on start-up",
    "lineNumber": 71
  },
  {
    "__docId__": 149,
    "kind": "test",
    "name": "describe2",
    "testId": 2,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe2",
    "access": null,
    "description": "routing",
    "lineNumber": 84
  },
  {
    "__docId__": 150,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "test/ControllerSpec.js~describe0.describe2",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe2.it3",
    "access": null,
    "description": "should show all entries without a route",
    "lineNumber": 85
  },
  {
    "__docId__": 151,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "test/ControllerSpec.js~describe0.describe2",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe2.it4",
    "access": null,
    "description": "should show all entries without \"all\" route",
    "lineNumber": 95
  },
  {
    "__docId__": 152,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "test/ControllerSpec.js~describe0.describe2",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe2.it5",
    "access": null,
    "description": "should show active entries",
    "lineNumber": 105
  },
  {
    "__docId__": 153,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "test/ControllerSpec.js~describe0.describe2",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe2.it6",
    "access": null,
    "description": "should show completed entries",
    "lineNumber": 116
  },
  {
    "__docId__": 154,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.it7",
    "access": null,
    "description": "should show the content block when todos exists",
    "lineNumber": 128
  },
  {
    "__docId__": 155,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.it8",
    "access": null,
    "description": "should hide the content block when no todos exists",
    "lineNumber": 138
  },
  {
    "__docId__": 156,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.it9",
    "access": null,
    "description": "should check the toggle all button, if all todos are completed",
    "lineNumber": 148
  },
  {
    "__docId__": 157,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.it10",
    "access": null,
    "description": "should check the toggle all button, if all todos are not completed",
    "lineNumber": 162
  },
  {
    "__docId__": 158,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.it11",
    "access": null,
    "description": "should set the \"clear completed\" button",
    "lineNumber": 175
  },
  {
    "__docId__": 159,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.it12",
    "access": null,
    "description": "should unset the \"clear completed\" button",
    "lineNumber": 188
  },
  {
    "__docId__": 160,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.it13",
    "access": null,
    "description": "should highlight \"All\" filter by default",
    "lineNumber": 202
  },
  {
    "__docId__": 161,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.it14",
    "access": null,
    "description": "should highlight \"Active\" filter when switching to active view",
    "lineNumber": 209
  },
  {
    "__docId__": 162,
    "kind": "test",
    "name": "describe15",
    "testId": 15,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe15",
    "access": null,
    "description": "toggle all",
    "lineNumber": 216
  },
  {
    "__docId__": 163,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "test/ControllerSpec.js~describe0.describe15",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe15.it16",
    "access": null,
    "description": "should toggle all todos to completed",
    "lineNumber": 217
  },
  {
    "__docId__": 164,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "test/ControllerSpec.js~describe0.describe15",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe15.it17",
    "access": null,
    "description": "should update the view",
    "lineNumber": 255
  },
  {
    "__docId__": 165,
    "kind": "test",
    "name": "describe18",
    "testId": 18,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe18",
    "access": null,
    "description": "new todo",
    "lineNumber": 300
  },
  {
    "__docId__": 166,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "test/ControllerSpec.js~describe0.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe18.it19",
    "access": null,
    "description": "should add a new todo to the model",
    "lineNumber": 301
  },
  {
    "__docId__": 167,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "test/ControllerSpec.js~describe0.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe18.it20",
    "access": null,
    "description": "should add a new todo to the view",
    "lineNumber": 321
  },
  {
    "__docId__": 168,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "test/ControllerSpec.js~describe0.describe18",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe18.it21",
    "access": null,
    "description": "should clear the input field when a new todo is added",
    "lineNumber": 353
  },
  {
    "__docId__": 169,
    "kind": "test",
    "name": "describe22",
    "testId": 22,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe22",
    "access": null,
    "description": "element removal",
    "lineNumber": 364
  },
  {
    "__docId__": 170,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "test/ControllerSpec.js~describe0.describe22",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe22.it23",
    "access": null,
    "description": "should remove an entry from the model",
    "lineNumber": 365
  },
  {
    "__docId__": 171,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "test/ControllerSpec.js~describe0.describe22",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe22.it24",
    "access": null,
    "description": "should remove an entry from the view",
    "lineNumber": 381
  },
  {
    "__docId__": 172,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "test/ControllerSpec.js~describe0.describe22",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe22.it25",
    "access": null,
    "description": "should update the element count",
    "lineNumber": 406
  },
  {
    "__docId__": 173,
    "kind": "test",
    "name": "describe26",
    "testId": 26,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe26",
    "access": null,
    "description": "remove completed",
    "lineNumber": 417
  },
  {
    "__docId__": 174,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "test/ControllerSpec.js~describe0.describe26",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe26.it27",
    "access": null,
    "description": "should remove a completed entry from the model",
    "lineNumber": 418
  },
  {
    "__docId__": 175,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "test/ControllerSpec.js~describe0.describe26",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe26.it28",
    "access": null,
    "description": "should remove a completed entry and keep active one from the model",
    "lineNumber": 433
  },
  {
    "__docId__": 176,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "test/ControllerSpec.js~describe0.describe26",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe26.it29",
    "access": null,
    "description": "should remove a completed entry from the view",
    "lineNumber": 456
  },
  {
    "__docId__": 177,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "test/ControllerSpec.js~describe0.describe26",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe26.it30",
    "access": null,
    "description": "should remove a completed entry and keep active one from the view",
    "lineNumber": 467
  },
  {
    "__docId__": 178,
    "kind": "test",
    "name": "describe31",
    "testId": 31,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe31",
    "access": null,
    "description": "element complete toggle",
    "lineNumber": 487
  },
  {
    "__docId__": 179,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "test/ControllerSpec.js~describe0.describe31",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe31.it32",
    "access": null,
    "description": "should update the model",
    "lineNumber": 488
  },
  {
    "__docId__": 180,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "test/ControllerSpec.js~describe0.describe31",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe31.it33",
    "access": null,
    "description": "should update the view",
    "lineNumber": 502
  },
  {
    "__docId__": 181,
    "kind": "test",
    "name": "describe34",
    "testId": 34,
    "memberof": "test/ControllerSpec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe34",
    "access": null,
    "description": "edit item",
    "lineNumber": 516
  },
  {
    "__docId__": 182,
    "kind": "test",
    "name": "it35",
    "testId": 35,
    "memberof": "test/ControllerSpec.js~describe0.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe34.it35",
    "access": null,
    "description": "should switch to edit mode",
    "lineNumber": 517
  },
  {
    "__docId__": 183,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "test/ControllerSpec.js~describe0.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe34.it36",
    "access": null,
    "description": "should leave edit mode on done",
    "lineNumber": 531
  },
  {
    "__docId__": 184,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "test/ControllerSpec.js~describe0.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe34.it37",
    "access": null,
    "description": "should persist the changes on done",
    "lineNumber": 545
  },
  {
    "__docId__": 185,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "test/ControllerSpec.js~describe0.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe34.it38",
    "access": null,
    "description": "should remove the element from the model when persisting an empty title",
    "lineNumber": 560
  },
  {
    "__docId__": 186,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "test/ControllerSpec.js~describe0.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe34.it39",
    "access": null,
    "description": "should remove the element from the view when persisting an empty title",
    "lineNumber": 571
  },
  {
    "__docId__": 187,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "test/ControllerSpec.js~describe0.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe34.it40",
    "access": null,
    "description": "should leave edit mode on cancel",
    "lineNumber": 582
  },
  {
    "__docId__": 188,
    "kind": "test",
    "name": "it41",
    "testId": 41,
    "memberof": "test/ControllerSpec.js~describe0.describe34",
    "testDepth": 2,
    "static": true,
    "longname": "test/ControllerSpec.js~describe0.describe34.it41",
    "access": null,
    "description": "should not persist the changes on cancel",
    "lineNumber": 596
  }
]